datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  username      String         @unique
  password      String
  role          Role           @default(USER)
  clubs         Club[]
  players       Player[]
  sessions      Session[]
  refreshTokens RefreshToken[]
}

model Club {
  id            Int        @id @default(autoincrement())
  name          String
  manager       User?      @relation(fields: [managerId], references: [id])
  managerId     Int?
  players       Player[]
  homeMatches   Match[]    @relation("home")
  awayMatches   Match[]    @relation("away")
  fromTransfers Transfer[] @relation("from")
  toTransfers   Transfer[] @relation("to")
}

model Player {
  id        Int        @id @default(autoincrement())
  name      String
  club      Club?      @relation(fields: [clubId], references: [id])
  clubId    Int?
  user      User?      @relation(fields: [userId], references: [id])
  userId    Int?
  transfers Transfer[]

  @@index([clubId, name])
  @@index([clubId])
}

model Match {
  id         Int      @id @default(autoincrement())
  homeClub   Club     @relation("home", fields: [homeClubId], references: [id])
  homeClubId Int
  awayClub   Club     @relation("away", fields: [awayClubId], references: [id])
  awayClubId Int
  playedAt   DateTime

  @@index([homeClubId, awayClubId, playedAt])
}

model Transfer {
  id        Int      @id @default(autoincrement())
  player    Player   @relation(fields: [playerId], references: [id])
  playerId  Int
  from      Club     @relation("from", fields: [fromId], references: [id])
  fromId    Int
  to        Club     @relation("to", fields: [toId], references: [id])
  toId      Int
  amount    Int
  createdAt DateTime @default(now())

  @@index([fromId, toId, createdAt])
}

model News {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime @default(now())
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  expiresAt DateTime
}

model Session {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  refreshHash String
  hashedAt    DateTime @default(now())
  revoked     Boolean  @default(false)

  @@index([userId])
}

enum Role {
  ADMIN
  CLUB
  USER
}
